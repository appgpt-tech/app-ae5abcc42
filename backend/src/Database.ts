//Source code generated by AppGPT (www.appgpt.tech)

//Class to create tables and seed new database
import { DataSource } from 'typeorm';
import { DBConfiguration } from './Configuration';
import { SettingsEntity } from './db/Settings.entity';
//autogenerate imports based on resources
import { UsersEntity } from './db/Users.entity';
import { PhotosEntity } from './db/Photos.entity';
import { ChatsEntity } from './db/Chats.entity';
import { LikesEntity } from './db/Likes.entity';
import { VideoChatsEntity } from './db/VideoChats.entity';

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [
      SettingsEntity,
      UsersEntity,
      PhotosEntity,
      ChatsEntity,
      LikesEntity,
      VideoChatsEntity,
    ];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables

    await Database.Seed();
  }
  static async Seed() {
    let data: any = {
      Users: [
        {
          username: 'username 1',
          email: 'email 1',
          password: 'password 1',
          height: 1,
          town: 1,
          province: 1,
          maritalStatus: 'maritalStatus 1',
          dateOfBirth: '2025-02-27T20:07:00.868Z',
          highestEducation: 'highestEducation 1',
          haveKids: true,
          lookingFor: 'lookingFor 1',
          id: 0,
        },
        {
          username: 'username 2',
          email: 'email 2',
          password: 'password 2',
          height: 2,
          town: 2,
          province: 2,
          maritalStatus: 'maritalStatus 2',
          dateOfBirth: '2024-04-07T03:03:29.479Z',
          highestEducation: 'highestEducation 2',
          haveKids: true,
          lookingFor: 'lookingFor 2',
          id: 83,
        },
        {
          username: 'username 3',
          email: 'email 3',
          password: 'password 3',
          height: 3,
          town: 3,
          province: 3,
          maritalStatus: 'maritalStatus 3',
          dateOfBirth: '2024-09-09T02:31:56.279Z',
          highestEducation: 'highestEducation 3',
          haveKids: true,
          lookingFor: 'lookingFor 3',
          id: 40,
        },
        {
          username: 'username 4',
          email: 'email 4',
          password: 'password 4',
          height: 4,
          town: 4,
          province: 4,
          maritalStatus: 'maritalStatus 4',
          dateOfBirth: '2024-05-15T06:01:02.104Z',
          highestEducation: 'highestEducation 4',
          haveKids: true,
          lookingFor: 'lookingFor 4',
          id: 66,
        },
        {
          username: 'username 5',
          email: 'email 5',
          password: 'password 5',
          height: 5,
          town: 5,
          province: 5,
          maritalStatus: 'maritalStatus 5',
          dateOfBirth: '2024-08-11T21:53:00.920Z',
          highestEducation: 'highestEducation 5',
          haveKids: false,
          lookingFor: 'lookingFor 5',
          id: 71,
        },
      ],
      Photos: [
        {
          photoUrl: 'photoUrl 1',
          userId: 1,
          uploadDate: '2023-10-02T15:51:21.020Z',
          id: 82,
        },
        {
          photoUrl: 'photoUrl 2',
          userId: 2,
          uploadDate: '2025-04-13T12:43:21.521Z',
          id: 40,
        },
        {
          photoUrl: 'photoUrl 3',
          userId: 3,
          uploadDate: '2024-09-25T02:01:32.016Z',
          id: 96,
        },
        {
          photoUrl: 'photoUrl 4',
          userId: 4,
          uploadDate: '2025-03-22T19:43:23.780Z',
          id: 46,
        },
        {
          photoUrl: 'photoUrl 5',
          userId: 5,
          uploadDate: '2024-11-21T15:59:07.536Z',
          id: 65,
        },
      ],
      Chats: [
        {
          senderId: 1,
          receiverId: 1,
          messageContent: 'messageContent 1',
          timestamp: '2023-06-11T14:27:52.541Z',
          id: 26,
        },
        {
          senderId: 2,
          receiverId: 2,
          messageContent: 'messageContent 2',
          timestamp: '2024-12-14T22:09:55.007Z',
          id: 90,
        },
        {
          senderId: 3,
          receiverId: 3,
          messageContent: 'messageContent 3',
          timestamp: '2024-12-17T04:18:18.605Z',
          id: 44,
        },
        {
          senderId: 4,
          receiverId: 4,
          messageContent: 'messageContent 4',
          timestamp: '2024-01-15T06:24:47.675Z',
          id: 86,
        },
        {
          senderId: 5,
          receiverId: 5,
          messageContent: 'messageContent 5',
          timestamp: '2023-04-19T00:01:04.086Z',
          id: 22,
        },
      ],
      Likes: [
        {
          userId: 1,
          targetId: 1,
          timestamp: '2024-03-14T07:51:49.037Z',
          id: 4,
        },
        {
          userId: 2,
          targetId: 2,
          timestamp: '2023-12-07T23:10:37.141Z',
          id: 53,
        },
        {
          userId: 3,
          targetId: 3,
          timestamp: '2024-09-28T22:56:59.127Z',
          id: 62,
        },
        {
          userId: 4,
          targetId: 4,
          timestamp: '2024-03-24T17:51:32.123Z',
          id: 45,
        },
        {
          userId: 5,
          targetId: 5,
          timestamp: '2024-02-02T07:21:58.595Z',
          id: 78,
        },
      ],
      VideoChats: [
        {
          callerId: 1,
          receiverId: 1,
          startTime: '2023-08-28T13:02:32.527Z',
          endTime: '2023-06-01T06:55:14.962Z',
          status: 'status 1',
          id: 92,
        },
        {
          callerId: 2,
          receiverId: 2,
          startTime: '2023-11-20T20:14:40.091Z',
          endTime: '2025-02-25T10:19:41.777Z',
          status: 'status 2',
          id: 70,
        },
        {
          callerId: 3,
          receiverId: 3,
          startTime: '2023-07-29T16:09:06.847Z',
          endTime: '2024-03-05T00:01:55.515Z',
          status: 'status 3',
          id: 80,
        },
        {
          callerId: 4,
          receiverId: 4,
          startTime: '2024-08-26T02:51:35.857Z',
          endTime: '2023-12-05T00:14:59.344Z',
          status: 'status 4',
          id: 34,
        },
        {
          callerId: 5,
          receiverId: 5,
          startTime: '2024-04-13T14:55:43.146Z',
          endTime: '2024-07-27T04:44:04.118Z',
          status: 'status 5',
          id: 78,
        },
      ],
    };
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true) {
      console.log('   Seeding database...');
      await this.SeedResource('UsersEntity', data.Users);
      await this.SeedResource('PhotosEntity', data.Photos);
      await this.SeedResource('ChatsEntity', data.Chats);
      await this.SeedResource('LikesEntity', data.Likes);
      await this.SeedResource('VideoChatsEntity', data.VideoChats);
      await this.SeedResource('SettingsEntity', {
        settingname: 'isSeeded',
        settingvalue: 'true',
      });
    } else {
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository('SettingsEntity');
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: 'isSeeded',
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table ' + resourceName);
    await repo.upsert(resourceData, ['id']);
  }
}
